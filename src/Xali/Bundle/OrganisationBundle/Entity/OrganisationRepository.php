<?php

namespace Xali\Bundle\OrganisationBundle\Entity;

use Xali\Bundle\UserBundle\Entity\User;
use \Doctrine\DBAL\Exception\UniqueConstraintViolationException;

/**
 * OrganisationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrganisationRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Insert an organisation if the manager is valid and not null
     * 
     * @param \Xali\Bundle\UserBundle\Entity\User $manager
     * @param \Xali\Bundle\OrganisationBundle\Entity\Organisation $organisation
     * @return $result null or the error string
     */
    public function insertOrganisation($manager, $organisation)
    {
        if (!empty($manager) && $manager instanceof User) {
            $result = null;
            $sql = "INSERT INTO organisation (manager_id, name) "
            . "VALUES (?, ?)";
            try {
                $stmt = $this->_em->getConnection()->prepare($sql);
                $stmt->execute(
                        array(
                            $manager->getId(),
                            $organisation->getName()
                        ));
            } catch (UniqueConstraintViolationException $e) {
                $result = "form.error.violation_key";
            } catch (\Exception $e) {
                $result = "form.error.other_error";
            }
            return $result;
        }
    }
}
